% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/feature_columns.R
\name{column_categorical_with_hash_bucket}
\alias{column_categorical_with_hash_bucket}
\title{Represents sparse feature where ids are set by hashing.}
\usage{
column_categorical_with_hash_bucket(key, hash_bucket_size, dtype = tf$string)
}
\arguments{
\item{key}{A unique string identifying the input feature. It is used as the column name and the dictionary key for feature parsing configs, feature \code{Tensor} objects, and feature columns.}

\item{hash_bucket_size}{An int > 1. The number of buckets.}

\item{dtype}{The type of features. Only string and integer types are supported.}
}
\value{
A \code{_HashedCategoricalColumn}.
}
\description{
Use this when your sparse features are in string or integer format, and you
want to distribute your inputs into a finite number of buckets by hashing.
output_id = Hash(input_feature_string) % bucket_size For input dictionary \code{features}, \code{features$key$} is either \code{Tensor} or
\code{SparseTensor}. If \code{Tensor}, missing values can be represented by \code{-1} for int
and \code{''} for string. Note that these values are independent of the
\code{default_value} argument.
}
\section{Raises}{

ValueError: \code{hash_bucket_size} is not greater than 1. ValueError: \code{dtype} is neither string nor integer.
}

\seealso{
Other feature_column wrappers: \code{\link{column_bucketized}},
  \code{\link{column_categorical_with_identity}},
  \code{\link{column_categorical_with_vocabulary_file}},
  \code{\link{column_categorical_with_vocabulary_list}},
  \code{\link{column_crossed}},
  \code{\link{column_embedding}},
  \code{\link{column_numeric}},
  \code{\link{column_weighted_categorical}}
}
