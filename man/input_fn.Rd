% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/input_fn.R
\name{input_fn}
\alias{input_fn}
\alias{input_fn.default}
\alias{input_fn.formula}
\alias{input_fn.list}
\alias{input_fn.data.frame}
\alias{input_fn.matrix}
\title{Input function constructor}
\usage{
\method{input_fn}{default}(object, ...)

\method{input_fn}{formula}(object, data, ...)

\method{input_fn}{list}(object, features, response = NULL, batch_size = 10L,
  shuffle = TRUE, num_epochs = 1L, queue_capacity = 1000L,
  num_threads = 1L)

\method{input_fn}{data.frame}(object, features, response = NULL,
  batch_size = 10L, shuffle = TRUE, num_epochs = 1L,
  queue_capacity = 1000L, num_threads = 1L)

\method{input_fn}{matrix}(object, features, response = NULL,
  batch_size = 10L, shuffle = TRUE, num_epochs = 1L,
  queue_capacity = 1000L, num_threads = 1L)
}
\arguments{
\item{object}{The object that represents the input source}

\item{features}{The names of features to be used}

\item{response}{The response variable name to be used}

\item{batch_size}{The size of batches}

\item{shuffle}{Whether to shuffles the queue. Avoid shuffle at prediction
time}

\item{num_epochs}{The number of epochs to iterate over data. If \code{NULL} will
run forever.}

\item{queue_capacity}{The size of queue to accumulate.}

\item{num_threads}{The number of threads used for reading and enqueueing. In
order to have predicted and repeatable order of reading and enqueueing,
such as in prediction and evaluation mode, \code{num_threads} should be 1.}
}
\description{
This function constructs input function from various types of input used to feed the
estimator.
}
\details{
For list objects, this method is particularly useful when constructing
dynamic length of inputs for models like recurrent neural networks. Note that
some arguments are not available yet for input_fn applied to list objects.
See S3 method signatures below for more details.
}
\examples{
# Construct the input function through formula interface
input_fn1 <- input_fn(mpg ~ drat + cyl, mtcars)

# Construct the input function from a list object
input_fn1 <- input_fn(
   object = list(
     feature1 = list(
       list(list(1), list(2), list(3)),
       list(list(4), list(5), list(6))),
     feature2 = list(
       list(list(7), list(8), list(9)),
       list(list(10), list(11), list(12))),
     response = list(
       list(1, 2, 3), list(4, 5, 6))),
   features = c("feature1", "feature2"),
   response = "response",
   batch_size = 10L)

# Construct the input function from a data.frame object
input_fn1 <- input_fn(mtcars, response = mpg, features = c(drat, cyl))

}
