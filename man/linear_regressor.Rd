% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/linear_estimators.R
\name{linear_regressor}
\alias{linear_regressor}
\title{An estimator for TensorFlow Linear regression problems.}
\usage{
linear_regressor(feature_columns, model_dir = NULL, label_dimension = 1L,
  weight_column = NULL, optimizer = "Ftrl", config = NULL,
  partitioner = NULL)
}
\arguments{
\item{feature_columns}{An iterable containing all the feature columns used by the model. All items in the set should be instances of classes derived from \code{FeatureColumn}.}

\item{model_dir}{Directory to save model parameters, graph and etc. This can also be used to load checkpoints from the directory into a estimator to continue training a previously saved model.}

\item{label_dimension}{Number of regression targets per example. This is the size of the last dimension of the labels and logits \code{Tensor} objects (typically, these have shape \code{[batch_size, label_dimension]}).}

\item{weight_column}{A string or a \code{_NumericColumn} created by \code{tf.feature_column.numeric_column} defining feature column representing weights. It is used to down weight or boost examples during training. It will be multiplied by the loss of the example. If it is a string, it is used as a key to fetch weight tensor from the \code{features}. If it is a \code{_NumericColumn}, raw tensor is fetched by key \code{weight_column.key}, then weight_column.normalizer_fn is applied on it to get weight tensor.}

\item{optimizer}{An instance of \code{tf.Optimizer} used to train the model. Defaults to FTRL optimizer.}

\item{config}{\code{RunConfig} object to configure the runtime settings.}

\item{partitioner}{Optional. Partitioner for input layer.}
}
\description{
Train a linear regression model to predict label value given observation of
feature values.
}
\seealso{
Other canned estimators: \code{\link{dnn_classifier}},
  \code{\link{dnn_linear_combined_classifier}},
  \code{\link{dnn_linear_combined_regressor}},
  \code{\link{dnn_regressor}}, \code{\link{dynamic_rnn}},
  \code{\link{linear_classifier}},
  \code{\link{state_saving_rnn}}
}
